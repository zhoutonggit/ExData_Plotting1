data$nitrate[!is.na(data$nitrate) & !is.na(data$sulfate)]
data$sulfate[!is.na(data$nitrate) & !is.na(data$sulfate)]
data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
data$sulfate[!is.na(data$sulfate) && !is.na(data$nitrate)]
data$sulfate[!is.na(data$sulfate) | !is.na(data$nitrate)]
data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)]
data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)]
source('~/corr.R', echo=TRUE)
cr <- corr("specdata", 150)
head(cr)
source('~/corr.R', echo=TRUE)
cr <- corr("specdata", 150)
head(cr)
source('~/corr.R', echo=TRUE)
cr <- corr("specdata", 150)
cr
cr$id
cr$nobs
a<-numeric(0)
a<-c(a,1)
a
dir <- sapply(directory, paste, "/", list.files(directory), sep="")
comp <- complete(directory)
sulfateVal <- numeric(0)
nitrateVal <- numeric(0)
for(i in length(comp$id)){
if(comp$nobs[i] > threshold){
data <- read.csv(dir[i])
sulfateVal<-c(sulfateVal, data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)])
nitrateVal<-c(nitrateVal, data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)])
}
}
for(i in length(comp$id)){
if(comp$nobs[i] > 150){
data <- read.csv(dir[i])
sulfateVal<-c(sulfateVal, data$sulfate[!is.na(data$sulfate) & !is.na(data$nitrate)])
nitrateVal<-c(nitrateVal, data$nitrate[!is.na(data$sulfate) & !is.na(data$nitrate)])
}
}
sulfateVal
nitrateVal
length(comp$id)
source('~/.active-rstudio-document', echo=TRUE)
cr <- corr("specdata", 150)
head(cr)
comp <- complete(directory)
comp$nobs[i] > 150
comp$nobs > 150
source('~/corr.R', echo=TRUE)
cr <- corr("specdata", 150)
head(cr)
source('~/corr.R', echo=TRUE)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
submit()
submit()
submit()
getwd()
getwd()
pwd()
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
names(outcome)
hist(outcome[, 11])
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data$State
class(data)
data[State == "AL"]
data["State" == "AL"]
test1 <- data["State" == "AL"]
head(test1)
View(test1)
View(test1)
data[$State == "AL"]
data$State == "AL"
data[data$State == "AL"]
data(data$State == "AL")
data[data$State == "AL",]
test1 <- data[data$State == "AL",]
test1 <- data[data$State == "CA",]
ncol(test1)
names(test1)
outcome <- Hear Attack
outcome <- "Heart Attack"
outcome <- paste("Hospital 30-Day Death (Mortality) Rates from", outcome)
outcome
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
?min
data["CA"]
data["CA",]
summary(data["CA",])
a <- data["CA",]
a <- data[data$State == "CA"]
a <- data(data$State == "CA")
a <- data[data$State == "CA",]
a <- data[[outcome]]
outcome
state <- "CA"
a <- data[[state]]
a
a <- data[[state],]
a <- data[[state,]]
a <- data[[state],]
state <- "State"
a <- data[[state]]
a <- data[[outcome]]
outcome2 <- "Hospital 30-Day Death (Mortality) Rates from Heart Attack"
a <- data[[outcome2]]
a
a <- data[["State"]]
a <- data[["Hospital 30-Day Death (Mortality) Rates from Heart Attack"]]
a <- data[["Phone Number"]]
a <- data[["County Nmae"]]
a
a <- data[["County Name"]]
a
View(data)
outcome <- paste("Hospital.30-Day.Death.(Mortality).Rates.from.", outcome)
a <- data[[outcome]]
outcome
outcome <- "hear attack"
outcome <- paste("Hospital.30-Day.Death.(Mortality).Rates.from.", outcome)
a <- data[[outcome]]
outcome
outcome <- "heart.attack"
outcome <- paste("Hospital.30-Day.Death.(Mortality).Rates.from.", outcome)
a <- data[[outcome]]
a
outcome <- "Heart.Attack"
outcome <- paste("Hospital.30-Day.Death.(Mortality).Rates.from.", outcome)
a <- data[[outcome]]
a
outcome
?paste
outcome <- "Heart.Attack"
outcome <- paste("Hospital.30-Day.Death.(Mortality).Rates.from.", outcome, sep ="")
a <- data[[outcome]]
a
outcome
outcome <- "Heart.Attack"
outcome <- paste("Hospital.30-Day.Death..Mortality..Rates.from.", outcome, sep ="")
a <- data[[outcome]]
a
outcome
outcome <- "Heart.Attack"
outcome <- paste("Hospital.30.Day.Death..Mortality..Rates.from.", outcome, sep ="")
outcome
a <- data[[outcome]]
a
outcome
outcome <- "Hospital.30.Day.Death..Mortality..Rates.from.heart attack"
a <- data[[outcome]]
?toupper
?casefold
toupper("heart attack")
casefold("heart attack")
?chartr
simpleCap("heart attack")
.simpleCap("heart attack")
x <- "MiXeD cAsE 123"
chartr("iXs", "why", x)
chartr("a-cX", "D-Fw", x)
tolower(x)
toupper(x)
read.xlsx2("/Users/user/Desktop/getdata-data-DATA.gov_NGAP.xlsx")
read.xlsx("/Users/user/Desktop/getdata-data-DATA.gov_NGAP.xlsx")
read.table("/Users/user/Desktop/getdata-data-DATA.gov_NGAP.xlsx")
library(XML)
install.packages("XML")
library(XML)
doc <- xmlTreeParse("/Users/user/Desktop/getdata-data-restaurants.xml")
rootNode <- xmlRoot(doc)
rootNode[[1]]
zipcode <- xpathSApply(rootNode[[1]],"//li[@class='score']",xmlValue)
zipcode <- xpathSApply(rootNode[[1]],"//zipcode",xmlValue)
zipcode <- xpathSApply(rootNode,"//zipcode",xmlValue)
rootNode[[1]][[1]]
rootNode[[1]][[1]][[3]]
rootNode[[1]][[1]][[2]]
xmlSApply(rootNode[[1]][[2]],xmlValue)
xmlSApply(rootNode[[1]][[1]][[2]],xmlValue)
xmlSApply(rootNode,xmlValue)
xmlSApply(rootNode[[1]],xmlValue)
xmlSApply(rootNode[[1]][[1]],xmlValue)
xmlSApply(rootNode[[1]][[]][[2]],xmlValue)
rootNode[[1]][[2]]
rootNode[[1]][[1]]
?xmlSApply
xmlSApply(rootNode[[1]][[1]],xmlName == "zipcode")
xmlSApply(rootNode[[1]][[1]],xmlAttrs == "zipcode")
xmlSApply(rootNode[[1]][[1]],zipcode)
xmlSApply(rootNode[[1]][[1]],xmlName)
xmlSApply(rootNode[[1]][[1]],xmlName == "zipcode")
xmlSApply(rootNode[[1]][[1]], zipcode == "zipcode")
xmlSApply(rootNode[[1]][[1]],xmlAttrs)
xmlSApply(rootNode[[1]][[1]],xmlSize)
xmlSApply(rootNode[[1]][[1]],xmlName)
xmlSApply(rootNode[[1]][[1]],xmlName, "zipcode")
xmlSApply(rootNode[[1]][[1]],xmlName,zipcode)
?xmlName
?xmlValue
xmlSApply(rootNode[[1]][[1]],xmlValue,"21231")
xmlSApply(rootNode[[1]][[1]],xmlValue,"zipcode")
xmlSApply(rootNode[[1]][[1]],xmlValue,"zipcode", ignoreComments = TRUE)
xmlSApply(rootNode[[1]][[1]],xmlValue,"zipcode", ignoreComments = TRUE, recursive = FALSE)
xmlSApply(rootNode[[1]][[1]]$zipcode,xmlValue)
rootNode[[1]][[1]]$zipcode
test<-rootNode[[1]][[1]]
x <- 1:10
x<-5
x <- 1:10
if (x>5) print(x)
source('~/complete.R')
source('~/corr.R')
cr <- corr("specdata")
summary(cr)
getwd()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
9
submit()
submit()
library(datesets)
library(datasets)
data(iris)
head(iris)
s <- split(iris, iris$Species)
s
head(s)
head(s)
sapply(s, function(x) colmenas(x[, "virginica"]))
sapply(s, function(x) colmeans(x[, "virginica"]))
sapply(s, function(x) colMeans(x[, "virginica"]))
sapply(s, function(x) colMeans(x[, "Species"]))
sapply(s, function(x) mean(x[, "Species"]))
sapply(s, function(x) mean(x[, "Species"]), na.rm = TRUE)
sapply(s, function(x) mean(x[, "Sepal.Length"]))
data(mtcars)
head(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429 - 82.63636
debug(ls)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
library(dplyr)
outcome <- paste0("Hospital.30.Day.Death..Mortality..Rates.from.", "Heart.Attack")
outcome
hospitals <- select(data, Hospital.Name, State, outcome)
hospitals <- select(data, Hospital.Name, State, Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
hospitals <- select(data, Hospital.Name, State, "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")
?select
hospitals <- select(data, Hospital.Name, State, contains(outcome))
hospitals
head(hospital)
head(hospitals)
View(hospitals)
hospitals <- select(data, Hospital.Name, State, matches(outcome))
View(hospitals)
outcome <- paste0("^","Hospital.30.Day.Death..Mortality..Rates.from.", "Heart.Attack","$")
hospitals <- select(data, Hospital.Name, State, matches(outcome))
View(hospitals)
source('~/Desktop/best.R')
best("TX", "heart attack")
hospitals <- select(data, Hospital.Name, State, matches(outcome)) %>%
filter(State == state) %>%
arrange(outcome)
state <- "TX"
hospitals <- select(data, Hospital.Name, State, matches(outcome)) %>%
filter(State == state) %>%
arrange(outcome)
hospitals <- select(data, Hospital.Name, State, matches(outcome))
filter(hospitals, State == state)
?arrange
outcome
colnames(hospital)
colnames(hospitals)
arrange(hospitals, Hospital.Name)
arrange(hospitals, colnames(hospital)[3], Hospital.Name)
arrange(hospitals, colnames(hospitals)[3], Hospital.Name)
colnames(hospitals)[3]
arrange_vars(hospitals, colnames(hospitals)[3], Hospital.Name)
select_vars(hospitals, colnames(hospitals)[3])
?select_vars
?select
select(hospitals, num_range(2))
select(hospitals, num_range("S",2:3))
select(hospitals, "State")
select(hospitals, 1)
source('~/Desktop/best.R')
best("TX", "heart attack")
arrange(hospitals, 3)
arrange(hospitals, "Hospital.Name")
arrange(hospitals, Hospital.Name)
hospitals <- filter(hospitals, State == "TX")
?sort
sort(hospital, 3)
sort(hospital[,3])
sort(hospitals[,3])
hospitals[order(hospital[,3])]
hospitals[order(hospitals[,3])]
arrange(hospitals, hospital[,3])
arrange(hospitals, hospitals[,3])
arrange(hospitals, hospitals[,3], Hospital.Name)
source('~/Desktop/best.R')
source('~/Desktop/best.R')
best("TX", "heart attack")
best("MD", "heart attack")
best("TX", "heart failure")
best("MD", "pneumonia")
hospitals <- select(data, Hospital.Name, State, matches(outcome))
hospitals <- filter(hospitals, State == "MD")
arrange(hospitals, hospitals[,3], Hospital.Name)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- unique(data$State)
state <- "MD"
sum(grepl(paste0("^",state,"$"), states
)
)
best("MD", "heart attack")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
best("NN","pneumonia")
submit()
best("NN","pneumonia")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
source('~/Desktop/best.R')
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
best("NY", "pneumonia")
library(dplyr)
best("NY", "pneumonia")
est("TX", "heart failure")
best("TX", "heart failure")
source('~/Desktop/best.R')
best("TX", "heart failure")
submit()
best("SC", "heart attack")
submit()
best("TX", "heart failure")
best("TX", "heart attack")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
## Get distinct states name and a vector of outcomenames
states <- unique(data$State)
outcomes <- c("heart attack", "heart failure", "pneumonia")
State<- "TX"
outcome <- "heart failure"
outcome <- paste0("^","Hospital.30.Day.Death..Mortality..Rates.from.", outcome,"$")
## Return hospital name in that state with lowest 30-day death rate
hospitals <- select(data, Hospital.Name, State, matches(outcome))
hospitals <- filter(hospitals, State == state)
hospitals <- arrange(hospitals, hospitals[,3], Hospital.Name)
state <- "TX"
outcome <- paste0("^","Hospital.30.Day.Death..Mortality..Rates.from.", outcome,"$")
## Return hospital name in that state with lowest 30-day death rate
hospitals <- select(data, Hospital.Name, State, matches(outcome))
hospitals <- filter(hospitals, State == state)
hospitals <- arrange(hospitals, hospitals[,3], Hospital.Name)
outcome <- paste0("^","Hospital.30.Day.Death..Mortality..Rates.from.", outcome,"$")
> ## Return hospital name in that state with lowest 30-day death rate
> hospitals <- select(data, Hospital.Name, State, matches(outcome))
> hospitals <- filter(hospitals, State == state)
outcome <- paste0("^","Hospital.30.Day.Death..Mortality..Rates.from.", outcome,"$")
## Return hospital name in that state with lowest 30-day death ratehospitals <- select(data, Hospital.Name, State, matches(outcome))
> hospitals <- filter(hospitals, State == state)
outcome <- paste0("^","Hospital.30.Day.Death..Mortality..Rates.from.", outcome,"$")
## Return hospital name in that state with lowest 30-day death rate
hospitals <- select(data, Hospital.Name, State, matches(outcome))
hospitals <- filter(hospitals, State == state)
hospitals <- arrange(hospitals, hospitals[,3], Hospital.Name)
hospitals <- select(data, Hospital.Name, State, matches(outcome))
hospitals <- filter(hospitals, State == state)
hospitals <- select(data, Hospital.Name, State, matches(outcome))
View(hospitals)
outcome
outcomeCol <- paste0("^","Hospital.30.Day.Death..Mortality..Rates.from.", outcome,"$")
## Return hospital name in that state with lowest 30-day death rate
hospitals <- select(data, Hospital.Name, State, matches(outcomeCol))
hospitals <- filter(hospitals, State == state)
hospitals <- select(data, Hospital.Name, State, matches(outcomeCol))
View(hospitals)
outcomeCal
outcomeCol
outcome <- "heart attack"
outcomeCol <- paste0("^","Hospital.30.Day.Death..Mortality..Rates.from.", outcome,"$")
## Return hospital name in that state with lowest 30-day death rate
hospitals <- select(data, Hospital.Name, State, matches(outcomeCol))
hospitals <- filter(hospitals, State == state)
outcomeCol
if(outcome == "heart attack")
outcome <- "Heart.Attack"
else if(outcome == "heart failure")
outcome <- "Heart.Failure"
else if(outcome == "pneumonia")
outcome <- "Pneumonia"
else
stop("invalid outcome")
outcomeCol <- paste0("^","Hospital.30.Day.Death..Mortality..Rates.from.", outcome,"$")
## Return hospital name in that state with lowest 30-day death rate
hospitals <- select(data, Hospital.Name, State, matches(outcomeCol))
hospitals <- filter(hospitals, State == state)
hospitals <- arrange(hospitals, hospitals[,3], Hospital.Name)
if(outcome == "heart attack"){
outcome <- "Heart.Attack"
}
else if(outcome == "heart failure"){
outcome <- "Heart.Failure"
}
else if(outcome == "pneumonia"){
outcome <- "Pneumonia"
}
else{
stop("invalid outcome")
}
outcomeCol <- paste0("^","Hospital.30.Day.Death..Mortality..Rates.from.", outcome,"$")
## Return hospital name in that state with lowest 30-day death rate
hospitals <- select(data, Hospital.Name, State, matches(outcomeCol))
hospitals <- filter(hospitals, State == state)
hospitals <- arrange(hospitals, hospitals[,3], Hospital.Name)
outcome <- "Heart.Failure"
outcomeCol <- paste0("^","Hospital.30.Day.Death..Mortality..Rates.from.", outcome,"$")
## Return hospital name in that state with lowest 30-day death rate
hospitals <- select(data, Hospital.Name, State, matches(outcomeCol))
hospitals <- filter(hospitals, State == state)
View(hospitals)
hospitals <- arrange(hospitals, hospitals[,3], Hospital.Name)
View(hospitals)
hospitals <- arrange(hospitals, as.numeric(hospitals[,3]), Hospital.Name)
View(hospitals)
best("TX", "heart attack")
source('~/Desktop/best.R')
best("TX", "heart attack")
source('~/Desktop/best.R')
hospitals <- best("TX", "heart attack")
View(hospitals)
source('~/Desktop/best.R')
est("TX", "heart failure")
best("TX", "heart failure")
submit()
submit()
submit()
best("MD", "heart attack")
best("MD", "pneumonia")
best("MD", "pneumonia")
best("BB", "heart attack")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
best("SC", "heart attack")
best("NY", "pneumonia")
source('~/Desktop/best.R')
hos <- best("NY", "pneumonia")
View(hos)
hos <-best("SC", "heart attack")
View(hos)
source('~/Desktop/best.R')
hos <-best("SC", "heart attack")
source('~/Desktop/best.R')
hos <-best("SC", "heart attack")
source('~/Desktop/best.R')
hos <-best("SC", "heart attack")
hos <- best("NY", "pneumonia")
hos[1,1]
setwd("./Github/Coursera/ExData/ExData_Plotting")
setwd("./Github/Coursera/ExData/ExData_Plotting1")
source('~/GitHub/Coursera/ExData/ExData_Plotting1/plot2.R')
plot(datetime, global_active_power, type = "l", xlab = "", ylab = "Global Active Power (killowatts)")
source('~/GitHub/Coursera/ExData/ExData_Plotting1/plot2.R')
sub_metering_1 <- as.numeric(data$Sub_metering_1)
?points
?ledgend
?legdend
?legend
source('~/GitHub/Coursera/ExData/ExData_Plotting1/plot3.R')
source('~/GitHub/Coursera/ExData/ExData_Plotting1/plot3.R')
points(sub_metering_2, col = "red", type = "l")
points(sub_metering_2, col = "red")
plot(datetime, sub_metering_1, ylab = "Energy sub metering", type = "n")
points(sub_metering_2, col = "red", type = "l")
points(datetiem, sub_metering_2, col = "red", type = "l")
points(datetime, sub_metering_2, col = "red", type = "l")
points(datetime, sub_metering_2, col = "red", type = "l")
source('~/GitHub/Coursera/ExData/ExData_Plotting1/plot3.R')
legend("topright", legend = "Sub_metering_1", type = "l" ,col = "black")
legend("topright", legend = "Sub_metering_1", pch = l ,col = "black")
legend("topright", legend = "Sub_metering_1", pch = 1, col = "black")
example(points)
source('~/GitHub/Coursera/ExData/ExData_Plotting1/plot3.R')
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = c(1, 1, 1))
source('~/GitHub/Coursera/ExData/ExData_Plotting1/plot3.R')
View(data)
source('~/GitHub/Coursera/ExData/ExData_Plotting1/plot4.R')
?par
source('~/GitHub/Coursera/ExData/ExData_Plotting1/plot4.R')
source('~/GitHub/Coursera/ExData/ExData_Plotting1/plot4.R')
source('~/GitHub/Coursera/ExData/ExData_Plotting1/plot4.R')
